<?xml version="1.0"?>
<!-- ********************************************************* -->
<!-- ** AMRS Registration Module                            ** -->
<!-- **	                                                    ** -->
<!-- ** @author Win Ribeka, Brian McKown                    ** -->
<!-- ** @version 0.8                                        ** -->
<!-- ********************************************************* -->
<project name="amrsregistration" default="package-module">
		
	<!-- *********************************************************** -->
	<!-- **                     TARGETS                           ** -->
	<!-- *********************************************************** -->
	<target name="init" description="initialization">
        <xmlcatalog id="common-dtds">
            <dtd
                publicId="-//OpenMRS//DTD OpenMRS Config 1.0//EN"
                location="lib-common/config-1.0.dtd"/>
        </xmlcatalog>
        <xmlproperty file="metadata/config.xml" >
            <xmlcatalog refid="common-dtds"/>
        </xmlproperty>

		<filterset id="variables.to.replace">
			<filter token="MODULE_ID" value="${module.id}"/>
			<filter token="MODULE_NAME" value="Remote Registration Module" />
			<filter token="MODULE_VERSION" value="0.8"/>
			<filter token="MODULE_PACKAGE" value="${module.package}" />
		</filterset>
		
		<path id="classpath">
			<fileset dir="lib">
				<include name="**/*.jar"/>
			</fileset>
			<fileset dir="lib-common">
				<include name="**/*.jar"/>
			</fileset>
		</path>

	</target>
	
	<target name="package-module" depends="compile-module" description="Packages module into jar file">
		<mkdir dir="dist" />
		
		<!-- Copy module metadata -->
		<copy todir="build/">
			<fileset dir="metadata/" includes="**/*" />
			<filterset refid="variables.to.replace" />
		</copy>
		
		<!-- Copy module web data -->
		<copy todir="build/web/module/">
			<!--<fileset dir="web/module/" includes="**/*" />-->
                        <fileset dir="web/module/" includes="**/*" excludes="resources/**/*" />
			<filterset refid="variables.to.replace" />
		</copy>
                
                <!-- Copy the /web/resources folder separately so that image files are not corrupted --> 
		<copy todir="build/web/module/">
			<fileset dir="web/module/" includes="resources/**/*" />
		</copy>
		
		<!-- Copy lib folder -->
		<!-- (lib should only contain this module's required -->
		<!-- libraries that OpenMRS doesn't contain already) -->
		<copy todir="build/lib" failonerror="false">
			<fileset dir="lib" includes="**/*" />
		</copy>
		
		<!-- Create distributable jar file -->
		<jar destfile="dist/${module.id}-${module.version}.omod">
			<fileset dir="build" includes="**/*" />
		</jar>
	</target>
	
	<target name="deploy-web" depends="package-module">
		<property environment="env"/>
		<copy todir="${module.tomcat.home}/webapps/openmrs/WEB-INF/view/module/amrsregistration">
			<fileset dir="web/module" includes="**/*" />
		</copy>
	</target>

	<target name="clean" description="Delete build and dist directories">
		<delete dir="dist" />
		<delete dir="build" />
        <delete dir="out" />
	</target>
	
	<target name="compile-module" depends="init" description="Compiles the module">
		<mkdir dir="build" />
		
		<!-- Copy other source data to the build folder -->
		<copy todir="build">
			<fileset dir="src/" excludes="**/*.java" />
		</copy>
		
		<!--  Compile module java files -->
		<javac destdir="build" classpathref="classpath" debug="true" debuglevel="lines,source">
            <compilerarg line="-target 1.5" />
			<src path="src/" />
			<include name="**/*.java" />
		</javac>
		
		<!--  Compile module web java files -->
		<javac destdir="build" classpathref="classpath" debug="true" debuglevel="lines,source">
			<compilerarg line="-target 1.5 -g" />
			<src path="web/src/" />
			<include name="**/*.java" />
		</javac>

		<!--  Compile module test java files -->
		<!--
		<javac destdir="build" classpathref="classpath" debug="true" debuglevel="lines,source">
			<compilerarg line="-target 1.5 -g" />
			<src path="test/" />
			<include name="**/*.java" />
		</javac>
		-->

	</target>

</project>
